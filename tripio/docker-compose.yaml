version: '3.8'

services:
  db:
    image: postgis/postgis:14-3.2
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data

  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn tripio.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery:
    build: .
    command: celery -A tripio worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A tripio beat -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/media
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/nginx/ssl
      - ./nginx/certbot/data:/var/www/certbot
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: